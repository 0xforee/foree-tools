#!/bin/bash
TMP_IPS=()
TMP_LOCATION=()

SOFT_DIR=$(dirname $(realpath $0))
source $SOFT_DIR/foree-tools.conf
source $SOFT_DIR/common.sh

PROJECT_DIR=$SOFT_DIR
PROJECT_CONF=$SOFT_DIR/foree-tools.conf
#source $PROJECT_CONF

function do_choice
{
    local LOGIN_IP
    local i=0
    local selection
    local count=${#TMP_IPS[@]}
    local IS_SEARCH_MODE=$1

    if [ $count -eq '1' ];then
        flog -W "IP: ${TMP_IPS[$i]}
        LOCATION: ${TMP_LOCATION[$i]}"
        LOGIN_IP=${TMP_IPS[$i]}
    else
        if [ $count -eq '0' ];then
            if [ -z "$IS_SEARCH_MODE" ];then #登陆模式
                flog -E "未指定项目或指定的项目不存在!!!,请在以下项目选择:"
                server_info
                count=${#BRINGUP_IPS[@]}
                if [ $count -eq '1' ];then
                    selection=1
                    flog -w "IP: ${BRINGUP_IPS[@]}"
                    flog -I
                else
                    flog -I "which server you want to login ?"
                    echo -n "<1...$count>?"
                    read selection
                fi
                #如果选择不为0,且小于等于IP数量,并且选择是个数字,那么就去选择IP
                if [ -z $selection ];then
                    LOGIN_IP=${BRINGUP_IPS[0]}
                    flog -W "IP: $LOGIN_IP"
                else
                    if [ $selection -ne '0' -a $selection -le $count ] && [[ $selection =~ [0-9]* ]];then
                        LOGIN_IP=${BRINGUP_IPS[$(($selection-1))]}
                        is_first_login $(($selection-1))
                    else
                        flog -W "输入错误,请在1...${count}中选择"
                    fi
                fi
            else
                echo
                flog -W "指定的项目不存在"
                echo
            fi
        else
            while [ $i -lt $count ]
            do
                flog -W "IP: ${TMP_IPS[$i]}\n LOCATION: ${TMP_LOCATION[$i]}"
                let 'i++'
            done
            if [ -z "$IS_SEARCH_MODE" ];then #查询模式
                echo "which server you want to login ?"
                echo -n "<1...$count>?"
                read selection
                case $selection in
                    [0-9]*)
                        LOGIN_IP=${TMP_IPS[$(($selection-1))]}
                        is_first_login $(($selection-1))
                        ;;
                    *)
                        LOGIN_IP=${BRINGUP_IPS[0]}
                        is_first_login 0
                        ;;
                esac
            fi
        fi
    fi

    if [ -z "$IS_SEARCH_MODE" ];then
        ssh bringup@$LOGIN_IP
    fi
}

function server_info
{

    for local_i in ${!BRINGUP_IPS[@]}
    do
        echo "$((local_i+1)). ${BRINGUP_IPS[$local_i]}"
        cat $PROJECT_DIR/${BRINGUP_PROJECT_LIST[$local_i]}|grep -v ^#
    done

}

function is_first_login
{
    if [ -z "$1" ];then
        echo "input error"
    elif [ "${FIRST_LOGIN[$1]}" = "true" ]; then
        echo "first login"
        if [ -f ~/.ssh/id_rsa.pub ];then
            ssh-copy-id -i ~/.ssh/id_rsa.pub bringup@${BRINGUP_IPS[$1]} 2>&1 > /dev/null
            FIRST_LOGIN[$1]="false"
            for i in ${!FIRST_LOGIN[@]}
            do
                sed -i "/FIRST_LOGIN/ s/true/${FIRST_LOGIN[$i]}/" $PROJECT_CONF
            done
        else
            echo -e "\033[33m If you want to login without input passwd \033[0m"
            echo -e "\033[33m You must generate your rsa key first!! \033[0m"
            flog -I "Generate now(y/n)?"
            yes_or_no
            if [ $? -eq '1' ];then
                ssh-keygen -t rsa
                is_first_login $1
            fi
        fi
    fi
}

function bringup_ssh
{
    HERE=`pwd`
    TMP_IPS=()
    TMP_LOCATION=()
    SEARCH_MODE=
    cd $PROJECT_DIR
    local i=0
    local tmp_i=0
    if [ ! -z "$1" ];then
        #如果是查询模式
        if [ "x$1" = "x-s" -a -n "$2" ];then
            SEARCH_MODE=true
            LOAD_PROJECT=$2
        else
            LOAD_PROJECT=$1
        fi

        SERVER_LIST=$( ls SERVER_* )
        for SERVER in $SERVER_LIST
        do
            search_result=$( grep -i "\/$LOAD_PROJECT" $SERVER |grep -v ^# )
            if [ ! -z "$search_result" ];then
                TMP_LOCATION[$tmp_i]="$search_result"
                TMP_IPS[$tmp_i]="${BRINGUP_IPS[$i]}"
                let 'tmp_i++'
            fi
            let 'i++'
        done
    fi

    cd $HERE

    do_choice $SEARCH_MODE
}
bringup_ssh $@
